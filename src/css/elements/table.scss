@use "../theme/colors" as colors;
@use "./theme/table.theme" as theme;

// Base Table Styling - Only structural properties
table {
  display: theme.$table-display;
  width: theme.$table-width;
  margin: theme.$table-margin;
  border-collapse: theme.$table-border-collapse;
  border-spacing: theme.$table-border-spacing;
  background: theme.$table-background;
}

thead {
  display: theme.$table-head-display;
  background: theme.$table-head-background;
}

// Table Row
tr {
  display: theme.$table-row-display;
  margin: theme.$table-row-margin;
}

// Table Header - Minimal styling
th {
  display: theme.$table-header-display;
  padding: theme.$table-header-padding;
  text-align: theme.$table-header-text-align;
  vertical-align: theme.$table-header-vertical-align;
  font-weight: theme.$table-header-font-weight;
  text-transform: theme.$table-header-text-transform;
  border-bottom: theme.$table-header-border-width theme.$table-border-style
    (theme.$table-border-color or colors.color("border"));
  color: theme.$table-header-color;
}

// Table Cells - Purely functional
td {
  display: theme.$table-cell-display;
  padding: theme.$table-cell-padding;
  text-align: theme.$table-cell-text-align;
  line-height: theme.$table-cell-line-height;
  border-bottom: theme.$table-border-width theme.$table-border-style
    (theme.$table-border-color or colors.color("border"));
}

// Responsive Table - Preserves functionality with minimal styling
@media (max-width: #{theme.$table-stack-breakpoint}) {
  table {
    display: theme.$table-mobile-display;
    width: theme.$table-mobile-width;
    border: theme.$table-mobile-border;
  }

  // Visually hide header but keep accessible for screen readers
  thead {
    position: theme.$table-head-mobile-position;
    width: theme.$table-head-mobile-width;
    height: theme.$table-head-mobile-height;
    padding: theme.$table-head-mobile-padding;
    margin: theme.$table-head-mobile-margin;
    overflow: theme.$table-head-mobile-overflow;
    clip: theme.$table-head-mobile-clip;
    white-space: theme.$table-head-mobile-white-space;
    border: theme.$table-head-mobile-border;
  }

  tbody {
    width: theme.$table-mobile-width;
    display: theme.$table-mobile-display;
  }

  // Rows become containers
  tr {
    display: theme.$table-row-mobile-display;
    margin-bottom: theme.$table-row-mobile-margin;
    background: theme.$table-row-background;
    border: theme.$table-row-border-width theme.$table-row-border-style
      (theme.$table-row-border-color or colors.color("border"));
  }

  // Each cell needs to be labeled for clarity
  td {
    position: relative;
    display: theme.$table-cell-mobile-display;
    padding: theme.$table-mobile-padding;
    padding-left: theme.$table-mobile-label-width;
    text-align: theme.$table-cell-mobile-align;
    min-height: theme.$table-cell-mobile-min-height;

    // Create accessible labels from data-label attribute
    &::before {
      content: attr(data-label);
      position: absolute;
      left: theme.$table-label-left;
      top: theme.$table-label-top;
      width: calc(40% - #{theme.$table-cell-padding});
      padding-right: theme.$table-label-padding;
      font-weight: theme.$table-label-font-weight;
      text-transform: theme.$table-label-text-transform;
      text-align: theme.$table-label-align;
      color: theme.$table-label-color;
    }

    &:empty {
      display: none;
    }
  }
}

// Small screen optimizations - Vertical layout
@media (max-width: #{theme.$table-small-breakpoint}) {
  td {
    padding: theme.$table-mobile-small-padding;
    padding-left: theme.$table-cell-padding;
    text-align: theme.$table-cell-mobile-small-align;

    // Switch to vertical layout for very small screens
    &::before {
      position: relative;
      display: block;
      left: auto;
      top: auto;
      width: 100%;
      margin-bottom: theme.$table-label-margin;
    }
  }
}
